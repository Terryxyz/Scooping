#!/usr/bin/env python
import numpy as np
from math import *
from scipy.optimize import linprog
import os
from general_functions import *
from shapely.geometry import LineString
import matplotlib
import matplotlib.pyplot as plt
from matplotlib.path import Path
import matplotlib.patches as patches

env_profile = [[0,2*sqrt(3)], [2,0], [6,0]]  # thumb and ground
object_vertex_position_on_ground_0 = [[2.0, 0.0], [5.0, 0.0], [5.0, 0.6], [2.0, 0.6]]
object_vertex_position_on_ground_1 = [[5.0, 0.0], [4.9875, 0.07729812416870137], [4.975, 0.10908712114635705], [4.9625, 0.13332291625973375], [4.95, 0.15362291495737193], [4.9375, 0.17139136501002586], [4.925000000000001, 0.18734993995195165], [4.9125000000000005, 0.20192820506308637], [4.9, 0.21540659228537973], [4.8875, 0.22798026230355964], [4.875, 0.23979157616563554], [4.862500000000001, 0.2509482018265916], [4.8500000000000005, 0.26153393661244], [4.8375, 0.271615537110821], [4.825000000000001, 0.2812472222085042], [4.812500000000001, 0.2904737509655558], [4.800000000000001, 0.29933259094191483], [4.7875000000000005, 0.3078554855772423], [4.775, 0.3160696125855816], [4.762500000000001, 0.32399845678644773], [4.750000000000001, 0.3316624790355394], [4.737500000000001, 0.3390796366637189], [4.725000000000001, 0.34626579386361517], [4.712500000000001, 0.35323504922360066], [4.700000000000001, 0.35999999999999943], [4.687500000000001, 0.3665719574653789], [4.675000000000001, 0.37296112397942977], [4.662500000000001, 0.3791767397929355], [4.650000000000001, 0.38522720568516383], [4.637500000000001, 0.3911201861320885], [4.625000000000002, 0.396862696659688], [4.612500000000002, 0.4024611782520141], [4.600000000000001, 0.40792156108742217], [4.587500000000001, 0.41324931941867665], [4.575000000000001, 0.4184495190581529], [4.562500000000002, 0.4235268586524348], [4.550000000000002, 0.42848570571257033], [4.537500000000001, 0.4333301281932742], [4.525000000000002, 0.43806392227618957], [4.512500000000002, 0.4426906369012106], [4.500000000000002, 0.4472135954999573], [4.487500000000002, 0.45163591531232256], [4.475000000000001, 0.4559605246071193], [4.462500000000002, 0.4601901780785846], [4.450000000000002, 0.4643274706497553], [4.437500000000002, 0.4683748498798792], [4.4250000000000025, 0.472334627144781], [4.412500000000002, 0.47620898773542625], [4.400000000000002, 0.4799999999999993], [4.387500000000002, 0.48370962363798325], [4.375000000000002, 0.48733971724044756], [4.3625000000000025, 0.49089204515860646], [4.350000000000002, 0.49436828377233033], [4.337500000000002, 0.4977700272214061], [4.325000000000003, 0.5010987926547014], [4.312500000000003, 0.5043560250457997], [4.3000000000000025, 0.5075431016179801], [4.287500000000002, 0.5106613359164754], [4.275000000000002, 0.5137119815616522], [4.262500000000003, 0.5166962357130148], [4.250000000000003, 0.5196152422706626], [4.2375000000000025, 0.5224700948379719], [4.225000000000003, 0.5252618394667552], [4.212500000000003, 0.5279914772039406], [4.200000000000003, 0.5306599664568633], [4.187500000000003, 0.5332682251925379], [4.1750000000000025, 0.5358171329847519], [4.162500000000003, 0.5383075329214698], [4.150000000000003, 0.5407402333838304], [4.137500000000003, 0.5431160097069496], [4.1250000000000036, 0.5454356057317852], [4.112500000000003, 0.5476997352564628], [4.100000000000003, 0.5499090833947002], [4.087500000000003, 0.552064307848279], [4.075000000000003, 0.5541660400998959], [4.0625000000000036, 0.5562148865321742], [4.050000000000003, 0.558211429478114], [4.037500000000003, 0.5601562282078093], [4.025000000000004, 0.5620498198558553], [4.012500000000004, 0.5638927202934965], [4.0000000000000036, 0.5656854249492375], [3.9875000000000034, 0.5674284095813316], [3.9750000000000036, 0.5691221310052873], [3.962500000000004, 0.5707670277792853], [3.9500000000000037, 0.572363520850167], [3.9375000000000036, 0.5739120141624493], [3.925000000000004, 0.5754128952326316], [3.912500000000004, 0.5768665356908819], [3.900000000000004, 0.578273291792038], [3.8875000000000037, 0.5796335048977065], [3.875000000000004, 0.5809475019311121], [3.8625000000000043, 0.5822155958062266], [3.850000000000004, 0.5834380858325924], [3.837500000000004, 0.5846152580971519], [3.825000000000004, 0.5857473858242984], [3.8125000000000044, 0.5868347297152747], [3.8000000000000043, 0.5878775382679624], [3.787500000000004, 0.5888760480780311], [3.7750000000000044, 0.5898304841223447], [3.7625000000000046, 0.5907410600254561], [3.7500000000000044, 0.5916079783099613], [3.7375000000000043, 0.5924314306314272], [3.7250000000000045, 0.5932115979985554], [3.712500000000005, 0.59394865097919], [3.7000000000000046, 0.5946427498927399], [3.6875000000000044, 0.5952940449895326], [3.6750000000000047, 0.595902676617583], [3.662500000000005, 0.5964687753772193], [3.650000000000005, 0.5969924622639717], [3.6375000000000046, 0.5974738488000958], [3.625000000000005, 0.5979130371550697], [3.612500000000005, 0.5983101202553738], [3.600000000000005, 0.5986651818838304], [3.587500000000005, 0.5989782967687559], [3.575000000000005, 0.5992495306631452], [3.5625000000000053, 0.5994789404140898], [3.550000000000005, 0.5996665740225979], [3.537500000000005, 0.599812470693966], [3.5250000000000052, 0.5999166608788257], [3.5125000000000055, 0.5999791663049643], [3.5, 0.6], [3.5, 0.6], [3.4875, 0.5999791663049643], [3.475, 0.5999166608788257], [3.4625, 0.5998124706939661], [3.45, 0.5996665740225979], [3.4375, 0.5994789404140899], [3.425, 0.5992495306631453], [3.4125, 0.598978296768756], [3.4, 0.5986651818838307], [3.3875, 0.5983101202553739], [3.375, 0.5979130371550699], [3.3625, 0.597473848800096], [3.35, 0.596992462263972], [3.3375, 0.5964687753772195], [3.325, 0.5959026766175832], [3.3125, 0.5952940449895329], [3.3, 0.5946427498927402], [3.2875, 0.5939486509791903], [3.275, 0.5932115979985557], [3.2625, 0.5924314306314276], [3.25, 0.5916079783099616], [3.2375, 0.5907410600254565], [3.225, 0.5898304841223451], [3.2125, 0.5888760480780314], [3.2, 0.5878775382679627], [3.1875, 0.5868347297152751], [3.175, 0.5857473858242989], [3.1625, 0.5846152580971523], [3.15, 0.5834380858325928], [3.1375, 0.5822155958062271], [3.125, 0.5809475019311126], [3.1125, 0.5796335048977069], [3.1, 0.5782732917920383], [3.0875, 0.5768665356908823], [3.075, 0.5754128952326321], [3.0625, 0.5739120141624499], [3.05, 0.5723635208501674], [3.0375, 0.5707670277792858], [3.025, 0.5691221310052879], [3.0125, 0.5674284095813321], [3.0, 0.565685424949238], [2.9875, 0.5638927202934969], [2.975, 0.5620498198558558], [2.9625, 0.5601562282078099], [2.95, 0.5582114294781144], [2.9375, 0.5562148865321747], [2.925, 0.5541660400998965], [2.9125, 0.5520643078482795], [2.9, 0.5499090833947008], [2.8875, 0.5476997352564632], [2.875, 0.5454356057317857], [2.8625, 0.5431160097069502], [2.85, 0.5407402333838309], [2.8375, 0.5383075329214704], [2.825, 0.5358171329847525], [2.8125, 0.5332682251925386], [2.8, 0.530659966456864], [2.7875, 0.5279914772039412], [2.775, 0.5252618394667558], [2.7625, 0.5224700948379725], [2.75, 0.5196152422706631], [2.7375, 0.5166962357130155], [2.725, 0.5137119815616529], [2.7125, 0.510661335916476], [2.7, 0.5075431016179808], [2.6875, 0.5043560250458003], [2.675, 0.5010987926547019], [2.6625, 0.49777002722140673], [2.65, 0.494368283772331], [2.6375, 0.4908920451586071], [2.625, 0.48733971724044817], [2.6125, 0.48370962363798375], [2.6, 0.4799999999999999], [2.5875, 0.47620898773542686], [2.575, 0.4723346271447817], [2.5625, 0.4683748498798799], [2.55, 0.46432747064975594], [2.5375, 0.46019017807858525], [2.525, 0.4559605246071199], [2.5125, 0.45163591531232317], [2.5, 0.4472135954999579], [2.4875, 0.4426906369012112], [2.4749999999999996, 0.4380639222761901], [2.4625, 0.43333012819327477], [2.45, 0.428485705712571], [2.4375, 0.4235268586524354], [2.425, 0.4184495190581536], [2.4124999999999996, 0.41324931941867726], [2.4, 0.40792156108742267], [2.3875, 0.4024611782520147], [2.375, 0.3968626966596886], [2.3625, 0.3911201861320891], [2.3499999999999996, 0.3852272056851644], [2.3375, 0.3791767397929361], [2.325, 0.37296112397943026], [2.3125, 0.36657195746537946], [2.3, 0.35999999999999993], [2.2874999999999996, 0.3532350492236012], [2.275, 0.3462657938636156], [2.2625, 0.33907963666371943], [2.25, 0.33166247903554], [2.2375, 0.3239984567864481], [2.2249999999999996, 0.3160696125855821], [2.2125, 0.3078554855772428], [2.2, 0.2993325909419153], [2.1875, 0.2904737509655563], [2.175, 0.2812472222085045], [2.1624999999999996, 0.2716155371108213], [2.15, 0.26153393661244034], [2.1375, 0.2509482018265921], [2.125, 0.23979157616563596], [2.1125, 0.2279802623035597], [2.0999999999999996, 0.21540659228538], [2.0875, 0.20192820506308667], [2.075, 0.18734993995195187], [2.0625, 0.17139136501002608], [2.05, 0.15362291495737193], [2.0374999999999996, 0.13332291625973375], [2.025, 0.10908712114635705], [2.0125, 0.07729812416870137], [2.0, 0.0]]
object_vertex_position_on_ground_2 = [[2.0, 0.0], [5.0, 0.0], [5.0, 0.5989002421104871], [4.9, 0.5692061757395119], [4.800000000000001, 0.5400197626013331], [4.700000000000001, 0.5113499911997655], [4.600000000000001, 0.4832063451570151], [4.500000000000002, 0.4555988504155826], [4.400000000000002, 0.4285381289920426], [4.3000000000000025, 0.40203546050068834], [4.200000000000003, 0.37610285295381707], [4.100000000000003, 0.3507531247187979], [4.0000000000000036, 0.3260000000000009], [3.900000000000004, 0.30185822085873454], [3.8000000000000043, 0.27834367964802176], [3.7000000000000046, 0.25547357691158695], [3.600000000000005, 0.23326661141277916], [3.5000000000000053, 0.21174321122529638], [3.4000000000000057, 0.19092581805507722], [3.300000000000006, 0.17083924168644746], [3.2000000000000064, 0.15151110850363536], [3.1000000000000068, 0.13297243887362648], [3.000000000000007, 0.11525840533340848], [2.9000000000000075, 0.09840935168976696], [2.800000000000008, 0.08247220137719255], [2.700000000000008, 0.0675024703251678], [2.6000000000000085, 0.05356726612400639], [2.500000000000009, 0.040750000000001084], [2.4000000000000092, 0.02915832642659827], [2.3000000000000096, 0.018938888562955176], [2.20000000000001, 0.010309025172149686], [2.1000000000000103, 0.0036447908033252208]]
object_vertex_position_on_ground_3 = [[4.89999999999999, 0.0036447908033252208], [4.79999999999999, 0.010309025172149686], [4.69999999999999, 0.018938888562955176], [4.599999999999991, 0.02915832642659827], [4.499999999999991, 0.040750000000001084], [4.3999999999999915, 0.05356726612400639], [4.299999999999992, 0.0675024703251678], [4.199999999999992, 0.08247220137719255], [4.0999999999999925, 0.09840935168976696], [3.999999999999993, 0.11525840533340848], [3.8999999999999932, 0.13297243887362648], [3.7999999999999936, 0.15151110850363536], [3.699999999999994, 0.17083924168644746], [3.5999999999999943, 0.19092581805507722], [3.4999999999999947, 0.21174321122529638], [3.399999999999995, 0.23326661141277916], [3.2999999999999954, 0.25547357691158695], [3.1999999999999957, 0.27834367964802176], [3.099999999999996, 0.30185822085873454], [2.9999999999999964, 0.3260000000000009], [2.899999999999997, 0.3507531247187979], [2.799999999999997, 0.37610285295381707], [2.6999999999999975, 0.40203546050068834], [2.599999999999998, 0.4285381289920426], [2.4999999999999982, 0.4555988504155826], [2.3999999999999986, 0.4832063451570151], [2.299999999999999, 0.5113499911997655], [2.1999999999999993, 0.5400197626013331], [2.0999999999999996, 0.5692061757395119], [2.0, 0.5989002421104871], [2.0, 0.0], [5.0, 0.0]]
phi = 10
for object_vertex_position_on_ground in [object_vertex_position_on_ground_0, object_vertex_position_on_ground_1, object_vertex_position_on_ground_2, object_vertex_position_on_ground_3]:
    object_vertex_position_after_rot = [point_position_after_rotation(point, [0,0], -phi) for point in object_vertex_position_on_ground]
    lowest_point = object_vertex_position_after_rot[0]
    for point in object_vertex_position_after_rot:
        if point[1]<=lowest_point[1]:
            lowest_point = point
    object_vertex_position_after_rot = [[point[0], point[1]-lowest_point[1]] for point in object_vertex_position_after_rot]
    print object_vertex_position_after_rot
    leftmost_distance_x_set = []
    for point in object_vertex_position_after_rot:
        if LineString([[-100, point[1]], [100, point[1]]]).intersects(LineString([[0,2*sqrt(3)], [2,0]]))==True:
            intersection_point = list(LineString([[-100, point[1]], [100, point[1]]]).intersection(LineString([[0,2*sqrt(3)], [2,0]])).coords[0])
            leftmost_distance_x_set.append(point[0]-intersection_point[0])
    print leftmost_distance_x_set
    object_vertex_position = [[point[0]-min(leftmost_distance_x_set), point[1]] for point in object_vertex_position_after_rot]

    feasible_finger_position_set = []
    for i in range(1,1001):
        point_index_temp = (i-0.5)*(circumference(object_vertex_position)/1000.0)
        finger_position = finger_index2position(object_vertex_position, point_index_temp)
        contact_index, contact_list, contact_normal_list, contact_local_tangent_list = contact_points_and_normal(object_vertex_position, finger_position, env_profile)
        tangential_vector_list = []
        for vector in contact_normal_list:
            tangential_vector_list.append(point_position_after_rotation(vector, [0,0], 90))
        #print(tangential_vector_list)
        A_ub = np.array(tangential_vector_list)
        A_ub = A_ub
        A_ub = A_ub.tolist()
        b_ub = []
        for k in range(len(contact_list)):
            b_ub.append(contact_list[k][0]*tangential_vector_list[k][0]+contact_list[k][1]*tangential_vector_list[k][1])
        f = [0,1]
        res1 = linprog(f, A_ub, b_ub)
        if res1.status == 2:
            Rotate_CW = False
        else:
            A_ub = (-np.array(A_ub)).tolist()
            b_ub = (-np.array(b_ub)).tolist()
            res2 = linprog(f, A_ub, b_ub)
            if res2.status !=2:
                Rotate_CW = False
            else:
                Rotate_CW = True
                if res1.x[1] > 0:
                    Gmoveleft = True
                else:
                    Gmoveleft = False
        if Rotate_CW == True and Gmoveleft == True:
            feasible_finger_position_set.append(finger_position)

    print feasible_finger_position_set

    fig = plt.figure()
    ax = fig.add_subplot(111, autoscale_on=False, xlim=(-0.1, 6.1), ylim=(-0.1, 3.6))
    ax.set_aspect('equal')
    ax.grid(True, linestyle = "-.", color = "grey", alpha=0.5)
    env_ground = [[0,0], [6,0]]
    env_thumb = [[0,2*sqrt(3)], [2,0]]
    env_plot0, = ax.plot([i[0] for i in env_ground], [i[1] for i in env_ground], 'grey', lw=2, zorder=-1) 
    env_plot1, = ax.plot([i[0] for i in env_thumb], [i[1] for i in env_thumb], 'grey', lw=1.5, zorder=-1) 
    verts=[tuple(k) for k in object_vertex_position]
    verts.append(tuple(object_vertex_position[0]))
    codes = [Path.MOVETO]
    for j in range(len(verts)-2):
        codes.append(Path.LINETO)
    codes.append(Path.CLOSEPOLY)
    path=Path(verts,codes)
    patch = patches.PathPatch(path, facecolor='darkgrey', edgecolor='black', lw=2, zorder=0)
    ax.add_patch(patch)
    for point in feasible_finger_position_set:
        feasible_finger_position, = ax.plot([point[0]], [point[1]], '-o', color='r', zorder=5, lw=2, markersize=2)
    plt.show()


